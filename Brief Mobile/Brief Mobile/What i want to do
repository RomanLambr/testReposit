1 Layer in textField Make animateble showing
2 MIstake second textField
3 count size cell in collectionview

// MARK: - UICollectionViewDataSource

func numberOfSections(in collectionView: UICollectionView) -> Int{
return 2
}

func collectionView(_ collectionView: UICollectionView,
numberOfItemsInSection section: Int) -> Int {
if section == Def.Section.addPhoto.rawValue {
return 1
} else {
return self.imageArray.count
}
}

func collectionView(_ collectionView: UICollectionView,
cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
if indexPath.section == Def.Section.addPhoto.rawValue {
let cell = collectionView.dequeueReusableCell(withReuseIdentifier: Def.addPhotoCollectionCellIdent , for: indexPath)


return cell
} else if indexPath.section == Def.Section.photos.rawValue {
let cell = collectionView.dequeueReusableCell(withReuseIdentifier: Def.collectionCellIdent,
for: indexPath) as? ImageCollectionCell
cell?.image.image = imageArray[indexPath.row]
cell?.removeButton.tag =  indexPath.row
return cell ?? UICollectionViewCell()
}
return UICollectionViewCell()
}

func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
if indexPath.section == 0 {
self.showAlertCameraOrGalery()
}
}

//MARK : - UICollectionViewDelegateFlowLayout

func collectionView(_ collectionView: UICollectionView,
layout collectionViewLayout: UICollectionViewLayout,
sizeForItemAt indexPath: IndexPath) -> CGSize {

let paddingSpace = Def.sectionInsets.left * (Def.itemsPerRow + 1)
let availableWidth = view.frame.width - paddingSpace
let widthPerItem = availableWidth / Def.itemsPerRow

return CGSize(width: widthPerItem, height: widthPerItem)
}

/*func collectionView(_ collectionView: UICollectionView,
layout collectionViewLayout: UICollectionViewLayout,
insetForSectionAt section: Int) -> UIEdgeInsets {
return UIEdgeInsets.init(top: 10.0, left: 0, bottom: 10, right: 20)
}*/

func collectionView(_ collectionView: UICollectionView,
layout collectionViewLayout: UICollectionViewLayout,
minimumLineSpacingForSectionAt section: Int) -> CGFloat {
return Def.sectionInsets.left
}


